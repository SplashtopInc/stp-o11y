appNodeSelector: &appNodeSelector devops
eksClusterName: &eksClusterName local-cluster
enabledvmproxy: &enabledvmproxy false
vmProxyEndpoint: &vmProxyEndpoint ""
env:
  vault_addr: ""
  vault_sns_arn: ""
  vault_sns_subject: ""
  vault_sns_message: ""
  vault_check_period: "*/1 * * * *"

kubernetes-event-exporter:
  enabled: true
  fullnameOverride: "kubernetes-event-exporter"
  networkPolicy:
    enabled: false
  config:
    logLevel: debug
    metricsNamePrefix: "event_exporter_"
    logFormat: json
    receivers:
      # - name: dump
      #   file:
      #   layout: {}
      #   path: /dev/stdout
      - name: loki
        loki:
          streamLabels:
            app: kubernetes-event-exporter
            dataCenter: local-cluster
          url: http://loki:3100/loki/api/v1/push
          # layout:
          #   message: "{{ .Message }}"
          #   reason: "{{ .Reason }}"
          #   type: "{{ .Type }}"
          #   count: "{{ .Count }}"
          #   kind: "{{ .InvolvedObject.Kind }}"
          #   name: "{{ .InvolvedObject.Name }}"
          #   namespace: "{{ .Namespace }}"
          #   component: "{{ .Source.Component }}"
          #   host: "{{ .Source.Host }}"
      # - name: webhook
      # use lambda function Url
      # allow NONE auth type
      # webhook:
      # lambda python example see lambda/
      # headers:
      #   data-center: local-cluster
      # endpoint: https://xxxxxxxxxxxxx.lambda-url.region.on.aws/
    # route:
      # routes:
        # - match:
        #   - receiver: dump
        # - match:
        #     - receiver: loki
      # - match:
      # - receiver: webhook

kube-state-metrics:
  enabled: true
  fullnameOverride: "kube-state-metrics"
  networkPolicy:
    enabled: false
  nodeSelector:
    app: *appNodeSelector

prometheus-node-exporter:
  enabled: true
  fullnameOverride: "node-exporter"
  networkPolicy:
    enabled: false
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9100"
      prometheus.io/path: "/metrics"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/os
            operator: In
            values:
            - linux
          - key: kubernetes.io/arch
            operator: In
            values:
            - amd64
            - arm64
          - key: eks.amazonaws.com/compute-type
            operator: NotIn
            values:
            - fargate

vmproxy:
  enabled: *enabledvmproxy
  datacenter: *eksClusterName
  endpoint: *vmProxyEndpoint
  nodeSelector:
    app: *appNodeSelector

victoria-metrics-agent:
  fullnameOverride: "victoria-metrics-agent"
  enabled: true
  replicaCount: 1
  deployment:
    enabled: false
  statefulset:
    enabled: true
    clusterMode: true
    replicationFactor: 1
    updateStrategy:
      type: RollingUpdate
  nodeSelector:
    app: *appNodeSelector
  config:
    global:
      scrape_interval: 30s
      external_labels:
        datacenter: *eksClusterName
  remoteWriteUrls:
    # send data to victoria-metrics-cluster-vminsert in the same cluster.
    - http://victoria-metrics-cluster-vminsert.default:8480/insert/0/prometheus
    # send data to remoteWrite 
    # - http://remote-write-url:8428/api/v1/write

vault_health_check:
  enabled: true